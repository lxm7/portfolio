{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Navbar.js","webpack:///./src/components/Layout.js"],"names":["TagRoute","render","postLinks","this","props","data","allMarkdownRemark","edges","map","post","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","key","node","fields","slug","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","className","frontmatter","title","tag","pageContext","site","siteMetadata","totalCount","tagHeader","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","style","marginBottom","React","Component","tagPageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","Navbar","react_default","gatsby_browser_entry","href","TemplateWrapper","children","Helmet_default","components_Navbar"],"mappings":"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","file":"component---src-templates-tags-js-5cba41d6600d2d64327a.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nclass TagRoute extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const postLinks = posts.map(post => (\n      <li key={post.node.fields.slug}>\n        <Link to={post.node.fields.slug}>\n          <h2 className=\"is-size-2\">{post.node.frontmatter.title}</h2>\n        </Link>\n      </li>\n    ))\n    const tag = this.props.pageContext.tag\n    const title = this.props.data.site.siteMetadata.title\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tagHeader = `${totalCount} post${\n      totalCount === 1 ? '' : 's'\n    } tagged with “${tag}”`\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <Helmet title={`${tag} | ${title}`} />\n          <div className=\"container content\">\n            <div className=\"columns\">\n              <div\n                className=\"column is-10 is-offset-1\"\n                style={{ marginBottom: '6rem' }}\n              >\n                <h3 className=\"title is-size-4 is-bold-light\">{tagHeader}</h3>\n                <ul className=\"taglist\">{postLinks}</ul>\n                <p>\n                  <Link to=\"/tags/\">Browse all tags</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Navbar = () => (\n  <nav className=\"navbar is-transparent\">\n    <div className=\"container\">\n      <Link className=\"content content--top\" to=\"/\">\n        <h2>Alex Moreton</h2>\n        <p>Front end developer portfolio</p>\n      </Link>\n      <div className=\"content content--top\">\n        <Link className=\"navbar-item\" to=\"/about\">\n          About\n        </Link>\n        <a \n            className=\"navbar-item\"\n            href='https://github.com/lxm7'\n        >\n            Github\n        </a>\n        <a\n            className=\"navbar-item\"\n            href='https://www.linkedin.com/in/alex-moreton-3519633b/'\n        >\n            LinkedIn\n        </a>\n        <a\n            className=\"navbar-item\"\n            href='https://stackoverflow.com/users/1341935/lxm7?tab=profile'\n        >\n            Stackoverflow\n        </a>\n      </div>\n    </div>\n  </nav>\n)\n\nexport default Navbar\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Navbar from '../components/Navbar'\nimport './all.sass'\n\nconst TemplateWrapper = ({ children }) => (\n  <div>\n    <Helmet title=\"Portfolio | Alex Moreton\" />\n    <Navbar />\n    <div>{children}</div>\n  </div>\n)\n\nexport default TemplateWrapper\n"],"sourceRoot":""}