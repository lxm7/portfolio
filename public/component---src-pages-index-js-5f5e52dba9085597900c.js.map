{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Navbar.js","webpack:///./src/components/Layout.js"],"names":["IndexPage","render","posts","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","className","map","_ref","post","node","key","id","frontmatter","title","href","url","src","image","alt","tags","join","React","Component","propTypes","PropTypes","shape","array","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","d","__webpack_exports__","createContext","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","pathname","Navbar","react_default","gatsby_browser_entry","to","TemplateWrapper","children","Helmet_default","components_Navbar"],"mappings":"iOAKqBA,kLACnBC,OAAA,WAAS,IAEQC,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,WAASE,UAAU,WACjBJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACZV,EAAMW,IAAI,SAAAC,GAAA,IAASC,EAATD,EAAGE,KAAH,OACPR,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UAAUK,IAAKF,EAAKG,IAC/BV,EAAAC,EAAAC,cAAA,UAAKK,EAAKI,YAAYC,OACtBZ,EAAAC,EAAAC,cAAA,KAAGE,UAAU,8BAA8BS,KAAMN,EAAKI,YAAYG,KAC9Dd,EAAAC,EAAAC,cAAA,OAAKa,IAAKR,EAAKI,YAAYK,MAAOC,IAAI,MAE1CjB,EAAAC,EAAAC,cAAA,SAAIK,EAAKI,YAAYO,KAAKC,KAAK,kBAfZC,IAAMC,WAyB7C7B,EAAU8B,UAAY,CACpBzB,KAAM0B,IAAUC,MAAM,CACpB1B,kBAAmByB,IAAUC,MAAM,CACjCzB,MAAOwB,IAAUE,WAKhB,IAAMC,EAAS,kCCtCtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAjC,EAAAiC,EAAAC,EAAAF,GAAAG,EAAAF,EAAA,IAAAG,EAAAH,EAAAC,EAAAC,GAAAE,EAAAJ,EAAA,IAAAK,EAAAL,EAAAC,EAAAG,GAAAJ,EAAAM,EAAAC,EAAA,sBAAAF,EAAArC,IAAAgC,EAAA,KAa2Bb,IAAMqB,cAAc,IAuDvClB,IAAUmB,OACTnB,IAAUoB,OAAOC,WAChBrB,IAAUsB,KACRtB,IAAUsB,iGClEhBC,EAAmB,SAAAxC,GAAiC,IAA9ByC,EAA8BzC,EAA9ByC,SAAUC,EAAoB1C,EAApB0C,cACpC,OAAKA,EAGE5B,IAAMlB,cAAc+C,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBxB,UAAY,CAC3ByB,SAAUxB,IAAUC,MAAM,CACxB6B,SAAU9B,IAAUoB,OAAOC,aAC1BA,YAGUE,6FCeAQ,EAlCA,kBACbC,EAAAtD,EAAAC,cAAA,OAAKE,UAAU,yBACbmD,EAAAtD,EAAAC,cAAA,OAAKE,UAAU,aACbmD,EAAAtD,EAAAC,cAACsD,EAAA,EAAD,CAAMpD,UAAU,uBAAuBqD,GAAG,KACxCF,EAAAtD,EAAAC,cAAA,0BACAqD,EAAAtD,EAAAC,cAAA,2CAEFqD,EAAAtD,EAAAC,cAAA,OAAKE,UAAU,wBACbmD,EAAAtD,EAAAC,cAACsD,EAAA,EAAD,CAAMpD,UAAU,cAAcqD,GAAG,UAAjC,SAGAF,EAAAtD,EAAAC,cAAA,KACIE,UAAU,cACVS,KAAK,2BAFT,UAMA0C,EAAAtD,EAAAC,cAAA,KACIE,UAAU,cACVS,KAAK,sDAFT,YAMA0C,EAAAtD,EAAAC,cAAA,KACIE,UAAU,cACVS,KAAK,4DAFT,4BCZO6C,IARS,SAAApD,GAAA,IAAGqD,EAAHrD,EAAGqD,SAAH,OACtBJ,EAAAtD,EAAAC,cAAA,WACEqD,EAAAtD,EAAAC,cAAC0D,EAAA3D,EAAD,CAAQW,MAAM,6BACd2C,EAAAtD,EAAAC,cAAC2D,EAAD,MACAN,EAAAtD,EAAAC,cAAA,WAAMyD","file":"component---src-pages-index-js-5f5e52dba9085597900c.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            {posts.map(({ node: post }) => (\n                <div className=\"content\" key={post.id}>\n                    <h4>{post.frontmatter.title}</h4>\n                    <a className=\"image_wrap has-text-primary\" href={post.frontmatter.url}>\n                        <img src={post.frontmatter.image} alt='' />\n                    </a>\n                    <p>{post.frontmatter.tags.join(' | ')}</p>\n                </div>\n            ))}\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] },\n      filter: { frontmatter: { templateKey: { eq: \"blog-post\" } }}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            templateKey\n            date(formatString: \"MMMM DD, YYYY\")\n            image\n            url\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Navbar = () => (\n  <nav className=\"navbar is-transparent\">\n    <div className=\"container\">\n      <Link className=\"content content--top\" to=\"/\">\n        <h2>Alex Moreton</h2>\n        <p>Front end developer portfolio</p>\n      </Link>\n      <div className=\"content content--top\">\n        <Link className=\"navbar-item\" to=\"/about\">\n          About\n        </Link>\n        <a \n            className=\"navbar-item\"\n            href='https://github.com/lxm7'\n        >\n            Github\n        </a>\n        <a\n            className=\"navbar-item\"\n            href='https://www.linkedin.com/in/alex-moreton-3519633b/'\n        >\n            LinkedIn\n        </a>\n        <a\n            className=\"navbar-item\"\n            href='https://stackoverflow.com/users/1341935/lxm7?tab=profile'\n        >\n            Stackoverflow\n        </a>\n      </div>\n    </div>\n  </nav>\n)\n\nexport default Navbar\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Navbar from '../components/Navbar'\nimport './all.sass'\n\nconst TemplateWrapper = ({ children }) => (\n  <div>\n    <Helmet title=\"Portfolio | Alex Moreton\" />\n    <Navbar />\n    <div>{children}</div>\n  </div>\n)\n\nexport default TemplateWrapper\n"],"sourceRoot":""}