{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Navbar.js","webpack:///./src/components/Layout.js"],"names":["IndexPage","render","posts","this","props","data","allMarkdownRemark","edges","postRows","_toConsumableArray","Array","Math","ceil","length","map","_","idx","slice","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_8__","className","row","key","_ref","post","node","id","style","width","frontmatter","title","href","url","src","image","alt","tags","join","React","Component","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Navbar","react_default","gatsby_browser_entry","to","TemplateWrapper","children","Helmet_default","components_Navbar"],"mappings":"glBAKqBA,kLACnBC,OAAA,WAAS,IAEQC,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAEFC,EADIC,EAAOC,MAAOC,KAAKC,KAAKV,EAAMW,OAAS,KAC3BC,IAAK,SAACC,EAAGC,GAAJ,OAAYd,EAAMe,MAAY,EAAND,EAAe,EAANA,EAAU,KAEtE,OACEE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KAEIH,EAAAC,EAAAC,cAAA,WAASE,UAAU,WAChBd,EAASM,IAAI,SAACS,EAAKP,GAAN,OACZE,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gDAAgDE,IAAKR,GACjEO,EAAIT,IAAI,SAAAW,GAAA,IAAQC,EAARD,EAAEE,KAAF,OACPT,EAAAC,EAAAC,cAAA,WAASI,IAAKE,EAAKE,GAAIN,UAAU,qBAC/BJ,EAAAC,EAAAC,cAAA,OAAKS,MAAO,CAACC,MAAO,SAClBZ,EAAAC,EAAAC,cAAA,UAAKM,EAAKK,YAAYC,OAEtBd,EAAAC,EAAAC,cAAA,KAAGE,UAAU,8BAA8BW,KAAMP,EAAKK,YAAYG,KAChEhB,EAAAC,EAAAC,cAAA,OAAKe,IAAKT,EAAKK,YAAYK,MAAOC,IAAI,MAGxCnB,EAAAC,EAAAC,cAAA,SAAIM,EAAKK,YAAYO,KAAKC,KAAK,qBAtBdC,IAAMC,WA2ChCC,EAAS,kCChDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/C,IAAAK,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,IAAAI,EAAAJ,EAAAE,EAAAC,GAAAH,EAAAK,EAAAC,EAAA,sBAAAF,EAAAlC,IAAA8B,EAAA,KAAAA,EAAA,GAcyBO,QAAOC,QAELjB,IAAMkB,cAAc,+ECMhCC,UAjBU,SAAAlC,GAAiC,IAA9BmC,EAA8BnC,EAA9BmC,SAAUC,EAAoBpC,EAApBoC,cACpC,OAAKA,EAGErB,IAAMpB,cAAc0C,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,uFC8BIC,EAlCA,kBACbC,EAAAhD,EAAAC,cAAA,OAAKE,UAAU,yBACb6C,EAAAhD,EAAAC,cAAA,OAAKE,UAAU,aACb6C,EAAAhD,EAAAC,cAACgD,EAAA,EAAD,CAAM9C,UAAU,uBAAuB+C,GAAG,KACxCF,EAAAhD,EAAAC,cAAA,0BACA+C,EAAAhD,EAAAC,cAAA,2CAEF+C,EAAAhD,EAAAC,cAAA,OAAKE,UAAU,wBACb6C,EAAAhD,EAAAC,cAACgD,EAAA,EAAD,CAAM9C,UAAU,cAAc+C,GAAG,UAAjC,SAGAF,EAAAhD,EAAAC,cAAA,KACIE,UAAU,cACVW,KAAK,2BAFT,UAMAkC,EAAAhD,EAAAC,cAAA,KACIE,UAAU,cACVW,KAAK,sDAFT,YAMAkC,EAAAhD,EAAAC,cAAA,KACIE,UAAU,cACVW,KAAK,4DAFT,4BCZOqC,IARS,SAAA7C,GAAA,IAAG8C,EAAH9C,EAAG8C,SAAH,OACtBJ,EAAAhD,EAAAC,cAAA,WACE+C,EAAAhD,EAAAC,cAACoD,EAAArD,EAAD,CAAQa,MAAM,6BACdmC,EAAAhD,EAAAC,cAACqD,EAAD,MACAN,EAAAhD,EAAAC,cAAA,WAAMmD","file":"component---src-pages-index-js-a5d6a8332d2ad3bc7fe7.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n    const rows = [...Array( Math.ceil(posts.length / 4) )];\n    const postRows = rows.map( (_, idx) => posts.slice(idx * 4, idx * 4 + 4) );\n\n    return (\n      <Layout>\n        {\n          <section className=\"section\">\n            {postRows.map((row, idx) => (\n              <div className=\"Grid Grid--gutters Grid--full large-Grid--fit\" key={idx}>    \n                {row.map(({node: post}) =>\n                  <article key={post.id} className=\"Grid-cell content\">\n                    <div style={{width: '100%'}}>\n                      <h3>{post.frontmatter.title}</h3>\n\n                      <a className=\"image_wrap has-text-primary\" href={post.frontmatter.url}>\n                        <img src={post.frontmatter.image} alt='' />\n                      </a>\n\n                      <p>{post.frontmatter.tags.join(' | ')}</p>\n                    </div>\n                  </article>  \n                )}\n              </div>\n            ))}\n          </section>\n        }\n      </Layout>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] },\n      filter: { frontmatter: { templateKey: { eq: \"blog-post\" } }}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            templateKey\n            date(formatString: \"MMMM DD, YYYY\")\n            image\n            url\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Navbar = () => (\n  <nav className=\"navbar is-transparent\">\n    <div className=\"container\">\n      <Link className=\"content content--top\" to=\"/\">\n        <h2>Alex Moreton</h2>\n        <p>Front end developer portfolio</p>\n      </Link>\n      <div className=\"content content--top\">\n        <Link className=\"navbar-item\" to=\"/about\">\n          About\n        </Link>\n        <a \n            className=\"navbar-item\"\n            href='https://github.com/lxm7'\n        >\n            Github\n        </a>\n        <a\n            className=\"navbar-item\"\n            href='https://www.linkedin.com/in/alex-moreton-3519633b/'\n        >\n            LinkedIn\n        </a>\n        <a\n            className=\"navbar-item\"\n            href='https://stackoverflow.com/users/1341935/lxm7?tab=profile'\n        >\n            Stackoverflow\n        </a>\n      </div>\n    </div>\n  </nav>\n)\n\nexport default Navbar\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Navbar from '../components/Navbar'\nimport './all.sass'\n\nconst TemplateWrapper = ({ children }) => (\n  <div>\n    <Helmet title=\"Portfolio | Alex Moreton\" />\n    <Navbar />\n    <div>{children}</div>\n  </div>\n)\n\nexport default TemplateWrapper\n"],"sourceRoot":""}