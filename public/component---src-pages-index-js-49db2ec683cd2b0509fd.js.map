{"version":3,"sources":["webpack:///./src/components/Article.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Navbar.js","webpack:///./src/components/Layout.js"],"names":["Article","_ref","post","react_default","a","createElement","key","id","className","frontmatter","title","href","url","umd_default","src","image","loader","react_loader_spinner_default","type","color","height","width","unloader","tags","join","IndexPage","render","posts","this","props","data","allMarkdownRemark","edges","postRows","_toConsumableArray","Array","Math","ceil","length","map","_","idx","slice","Layout","row","node","components_Article","React","Component","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","enqueue","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","Navbar","gatsby_browser_entry","to","TemplateWrapper","children","Helmet_default","components_Navbar"],"mappings":"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","file":"component---src-pages-index-js-49db2ec683cd2b0509fd.js","sourcesContent":["import React from \"react\";\nimport Img from \"react-image\";\nimport Loader from \"react-loader-spinner\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nconst Article = ({ post }) => (\n  <article key={post.id} className=\"Grid-cell bottom5em\">\n    <div className=\"full_width\">\n      <h3>{post.frontmatter.title}</h3>\n\n      <a className=\"image_wrap has-text-primary\" href={post.frontmatter.url}>\n        <Img\n          className=\"full_width\"\n          src={post.frontmatter.image}\n          loader={\n            <div className=\"placeholder\">\n              <Loader type=\"TailSpin\" color=\"gray\" height={40} width={40} />\n            </div>\n          }\n          unloader={<div className=\"placeholder\" />}\n        />\n      </a>\n\n      <p>{post.frontmatter.tags.join(\" | \")}</p>\n    </div>\n  </article>\n);\n\nexport default Article;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/Layout\";\nimport Article from \"../components/Article\";\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { data } = this.props;\n    const { edges: posts } = data.allMarkdownRemark;\n    const rows = [...Array(Math.ceil(posts.length / 4))];\n    const postRows = rows.map((_, idx) => posts.slice(idx * 4, idx * 4 + 4));\n\n    return (\n      <Layout>\n        <h2>Recent work</h2>\n        <section className=\"section\">\n          {postRows.map((\n            row,\n            idx // Remove large-Grid--fit styles, show lazy load single col instead\n          ) => (\n            <div key={idx}>\n              {row.map(({ node: post }) => (\n                <Article post={post} />\n              ))}\n            </div>\n          ))}\n        </section>\n      </Layout>\n    );\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array,\n    }),\n  }),\n};\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            templateKey\n            date(formatString: \"MMMM DD, YYYY\")\n            image\n            url\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Navbar = () => (\n  <nav className=\"navbar is-transparent\">\n    <div className=\"container\">\n      <Link className=\"content content--top\" to=\"/\">\n        <h2>Alex Moreton</h2>\n      </Link>\n      <p className=\"fat-p\">Front End / Full-Stack Developer</p>\n      <p>Quick portfolio site built with Gatsby, NetlifyCMS and AWS</p>\n      <div className=\"content content--top\">\n        <Link className=\"navbar-item\" to=\"/about\">\n          About\n        </Link>\n        <a className=\"navbar-item\" href=\"https://github.com/lxm7\">\n          Github\n        </a>\n        <a\n          className=\"navbar-item\"\n          href=\"https://www.linkedin.com/in/alex-moreton-3519633b/\"\n        >\n          LinkedIn\n        </a>\n        <a\n          className=\"navbar-item\"\n          href=\"https://stackoverflow.com/users/1341935/lxm7?tab=profile\"\n        >\n          Stackoverflow\n        </a>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Navbar;\n","import React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Navbar from '../components/Navbar'\nimport './all.sass'\n\nconst TemplateWrapper = ({ children }) => (\n  <div>\n    <Helmet title=\"Portfolio | Alex Moreton\" />\n    <Navbar />\n    <div>{children}</div>\n  </div>\n)\n\nexport default TemplateWrapper\n"],"sourceRoot":""}